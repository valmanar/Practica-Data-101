/* Creamos las dimensiones sobre los ciclos de facturacion y los metodos de pago */

USE ODS;

INSERT INTO ODS.ODS_DM_METODOS_PAGO (DE_METODO_PAGO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_METHOD)), 
 NOW(),
 NOW()
FROM STAGE.STG_FACTURAS_FCT
WHERE LENGTH(TRIM(BILL_METHOD)) <> 0;

INSERT INTO ODS.ODS_DM_METODOS_PAGO VALUES (99, 'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS.ODS_DM_METODOS_PAGO VALUES (98, 'NO APLICA', NOW(), NOW());

COMMIT;
ANALYZE TABLE ODS.ODS_DM_METODOS_PAGO;


INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_CYCLE)), 
 NOW(),
 NOW()
FROM STAGE.STG_FACTURAS_FCT
WHERE LENGTH(TRIM(BILL_CYCLE)) <> 0;

INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION VALUES (99, 'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION VALUES (98, 'NO APLICA', NOW(), NOW());

COMMIT;
ANALYZE TABLE ODS.ODS_DM_CICLOS_FACTURACION;

/* En facturas hay 20.000 clientes  distintos de los cuales en nuestra dimension tenemos 17560 */
SELECT COUNT(*) FROM (
select DISTINCT TRIM(FAC.CUSTOMER_ID)
from STAGE.STG_FACTURAS_FCT FAC
INNER JOIN ODS.ODS_HC_CLIENTES CLI ON CLI.ID_CLIENTE = TRIM(FAC.CUSTOMER_ID)
WHERE LENGTH(TRIM(FAC.CUSTOMER_ID)) <> 0
) A;
SELECT COUNT(DISTINCT FAC.CUSTOMER_ID)
FROM STAGE.STG_FACTURAS_FCT FAC
WHERE LENGTH(TRIM(CUSTOMER_ID)) <> 0;


/*Obtenemos los clientes de STG_FACTURAS_FCT que no estan en ODS.ODS_HC_CLIENTES que son en total 2440 */ 
DROP TABLE IF EXISTS ODS.TMP_CLIENTES_FACTURAS;
CREATE TABLE ODS.TMP_CLIENTES_FACTURAS AS
SELECT DISTINCT TRIM(FAC.CUSTOMER_ID) CLIENTE
FROM STAGE.STG_FACTURAS_FCT FAC
LEFT JOIN ODS.ODS_HC_CLIENTES CLI ON TRIM(FAC.CUSTOMER_ID) = CLI.ID_CLIENTE
WHERE CLI.ID_CLIENTE IS NULL;

COMMIT;

/* Insertamos en la dimension de clientes */
INSERT INTO ODS.ODS_HC_CLIENTES
SELECT CLIENTE AS ID_CLIENTE,
'DESCONOCIDO' NOMBRE_CLIENTE,
'DESCONOCIDO' APELLIDOS_CLIENTE,
'99-999-9999' NUMDOC_CLIENTE,
99 ID_SEXO,
999999 ID_DIRECCION,
9999999999 TELEFONO_CLIENTE,
'DESCONOCIDO' EMAIL,
STR_TO_DATE('31/12/9999','%d/%m/%Y') FC_NACIMIENTO,
999 ID_PROFESION,
999 ID_COMPANYA,
NOW() FC_INSERT,
NOW() FC_MODIFICACION
FROM ODS.TMP_CLIENTES_FACTURAS;

COMMIT;
DROP TABLE IF EXISTS ODS.TMP_CLIENTES_FACTURAS;

/* Procedemos a rellenar la tabla facturas */

INSERT INTO ODS.ODS_HC_FACTURAS
SELECT FAC.BILL_REF_NO ID_FACTURA,
CLI.ID_CLIENTE,
CASE WHEN LENGTH(TRIM(FAC.START_DATE)) <> 0 THEN STR_TO_DATE(TRIM(FAC.START_DATE), '%Y-%m-%d %H:%i:%S') ELSE STR_TO_DATE('31/12/9999 23:59:59', '%d/%m/%Y %T') END FC_INICIO,
CASE WHEN LENGTH(TRIM(FAC.END_DATE)) <> 0 THEN STR_TO_DATE(TRIM(FAC.END_DATE), '%Y-%m-%d %H:%i:%S') ELSE STR_TO_DATE('31/12/9999 23:59:59', '%d/%m/%Y %T') END FC_FIN,
CASE WHEN LENGTH(TRIM(FAC.STATEMENT_DATE)) <> 0 THEN STR_TO_DATE(TRIM(FAC.STATEMENT_DATE), '%Y-%m-%d %H:%i:%S') ELSE STR_TO_DATE('31/12/9999 23:59:59', '%d/%m/%Y %T') END FC_ESTADO,
CASE WHEN LENGTH(TRIM(FAC.PAYMENT_DATE)) <> 0 THEN STR_TO_DATE(TRIM(FAC.PAYMENT_DATE), '%Y-%m-%d %H:%i:%S') ELSE STR_TO_DATE('31/12/9999 23:59:59', '%d/%m/%Y %T') END FC_PAGO,
CICLO.ID_CICLO_FACTURACION ID_CICLO_FACTURACION,
MPAGO.ID_METODO_PAGO ID_METODO_PAGO,
AMOUNT CANTIDAD,
NOW() FC_INSERT,
NOW() FC_MODIFICACION
FROM STAGE.STG_FACTURAS_FCT FAC
LEFT JOIN ODS.ODS_HC_CLIENTES CLI ON CASE WHEN LENGTH(TRIM(FAC.CUSTOMER_ID))<>0 THEN TRIM(FAC.CUSTOMER_ID) ELSE 99999 END = CLI.ID_CLIENTE
LEFT JOIN ODS.ODS_DM_CICLOS_FACTURACION CICLO ON CASE WHEN LENGTH(TRIM(FAC.BILL_CYCLE))<>0 THEN UPPER(TRIM(FAC.BILL_CYCLE)) ELSE 'DESCONOCIDO' END = CICLO.DE_CICLO_FACTURACION
LEFT JOIN ODS.ODS_DM_METODOS_PAGO MPAGO ON CASE WHEN LENGTH(TRIM(FAC.BILL_METHOD))<>0 THEN UPPER(TRIM(FAC.BILL_METHOD)) ELSE 'DESCONOCIDO' END = MPAGO.DE_METODO_PAGO
;

COMMIT;
ANALYZE TABLE ODS.ODS_HC_FACTURAS;

